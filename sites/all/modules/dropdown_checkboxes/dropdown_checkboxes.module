<?php

/**
 * @file
 * Contains hooks and other functions.
 */

define('DROPDOWN_CHECKBOXES_ADDJS_ALL_PAGES', variable_get("dropdown_checkboxes_addjs_all_pages", 0));
define('DROPDOWN_CHECKBOXES_ADDJS_SPECIFIC_URLS', variable_get("dropdown_checkboxes_addjs_specific_urls", 0));
define('DROPDOWN_CHECKBOXES_FORM_IDS', variable_get('dropdown_checkboxes_collect_ids', ''));
define('DROPDOWN_CHECKBOXES_URLS', variable_get("dropdown_checkboxes_addjs_urls", ""));

/**
 * Implements hook_help().
 */
function dropdown_checkboxes_help($path, $args) {
  switch ($path) {
    case 'admin/help/dropdown_checkboxes':
      return t(
          "This module helps to convert multiple select lists into dropdown checkboxes using ddcl library. It can be used to change difficult to explain multiple select lists into user friendly and elegant dropdown checkboxes.<br />See README.txt for more details"
        );
  }
}

/**
 * Implements hook_permission().
 */
function dropdown_checkboxes_permission() {
  return array(
    'dropdown_checkboxes_settings' => array(
      'title' => 'Configure dropdown checkboxes settings',
      'warning' => 'Warning: Give this permission to trusted roles only;',
    ),
  );
}

/**
 * Implements hook_init().
 */
function dropdown_checkboxes_init() {

  if (DROPDOWN_CHECKBOXES_ADDJS_ALL_PAGES == 1) {
    // If specific urls checkbox is unchecked, load files on every page.
    if (DROPDOWN_CHECKBOXES_ADDJS_SPECIFIC_URLS == 0) {
      // Add files.
      dropdown_checkboxes_add_files();
    }
    // If specific urls checkbox is checked, load files only on listed pages.
    elseif (DROPDOWN_CHECKBOXES_ADDJS_SPECIFIC_URLS == 1) {
      $path_check = dropdown_checkboxes_specific_urls();
      if ($path_check == TRUE) {
        // Add files.
        dropdown_checkboxes_add_files();
      }
    }
    // Pass form ids.
    dropdown_checkboxes_pass_id_to_js(dropdown_checkboxes_ids_to_array(DROPDOWN_CHECKBOXES_FORM_IDS));
  }
}

/**
 * Implements hook_menu().
 */
function dropdown_checkboxes_menu() {
  $items = array();
  $items['admin/structure/dropdown_checkboxes'] = array(
    'title' => 'Dropdown checkboxes settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dropdown_checkboxes_settings_form'),
    'access arguments' => array('dropdown_checkboxes_settings'),
    'file' => 'dropdown_checkboxes.admin.inc',
    'description' => 'Configure dropdown checkboxes.',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Get the required js and css files.
 */
function dropdown_checkboxes_add_files() {
  // Add ui.widget library from core.
  drupal_add_library('system', 'ui.widget');
  // Get the path of the library.
  $libpath = libraries_get_path('ddcl');
  // Add ddcl js.
  drupal_add_js($libpath . "/js/ui.dropdownchecklist-1.3-min.js");
  // Add dropdown_checkboxes.js
  $jsfilepath = drupal_get_path("module", "dropdown_checkboxes") . "/dropdown_checkboxes.js";
  drupal_add_js($jsfilepath);
  // Add CSS file provided by ddcl library.
  drupal_add_css($libpath . "/css/ui.dropdownchecklist.themeroller.css");
  // Add smoothness css file.
  drupal_add_css($libpath . "/doc/smoothness/jquery-ui-1.8.4.custom.css");
}

/**
 * Call this function through #pre_render property of drupal form API.
 */
function dropdown_checkboxes($form) {
  // Return if id is already added in configuration form.
  // This is to avoid duplicate containers.
  if (DROPDOWN_CHECKBOXES_ADDJS_ALL_PAGES == 1 && in_array($form["#id"], dropdown_checkboxes_ids_to_array(DROPDOWN_CHECKBOXES_FORM_IDS))) {
    return $form;
  }
  else {
    // Add files.
    dropdown_checkboxes_add_files();
  }
  // Make sure #id attribute is set.
  if (!isset($form["#id"]) || empty($form["#id"])) {
    $form["#id"] = "dropdown_checkboxes-" . $form["#name"];
  }
  // Send id to js.
  dropdown_checkboxes_pass_id_to_js(array($form["#id"]));
  return $form;
}

/**
 * Pass form id to js.
 */
function dropdown_checkboxes_pass_id_to_js($id) {
  drupal_add_js(array(
      'dropdown_checkboxes' => array(
      'dcid' => $id,
    ),
  ), 'setting');
}

/**
 * Explode ids into array.
 */
function dropdown_checkboxes_ids_to_array($ids) {
  $array = array();
  $ids = explode("\r\n", trim($ids));
  // Remove white spaces(if any) on either side of the ids.
  $array = array_map('trim', $ids);
  return $array;
}

/**
 * Check the urls to load files.
 */
function dropdown_checkboxes_specific_urls() {
  $args = array();
  // Get urls as an array.
  $urls = dropdown_checkboxes_ids_to_array(DROPDOWN_CHECKBOXES_URLS);

  // Match listed url with current url.
  foreach ($urls as $url) {
    $url = trim($url);
    $path_match = drupal_match_path($_GET['q'], $url);
    if ($path_match) {
      return TRUE;
    }
  }
  return FALSE;
}